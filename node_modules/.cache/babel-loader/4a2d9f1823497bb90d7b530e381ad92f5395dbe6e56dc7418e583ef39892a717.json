{"ast":null,"code":"import { v1 as uuidv1 } from 'uuid';\nimport { v4 as uuidv4 } from 'uuid';\n\n/* Select a random element from values array. */\nfunction choice(values) {\n  const randIdx = Math.floor(Math.random() * values.length);\n  return values[randIdx];\n}\n\n/* Format response data from the Deck of Cards API,\n * extracting just the image url. */\nfunction formatCard(data) {\n  return {\n    image: data.cards[0].image,\n    id: uuid()\n  };\n}\n\n/* Format response data from the Pokemon API,\n * extracting the front image, back image,\n * and array of relevant stat information. */\nfunction formatPokemon(data) {\n  return {\n    id: uuid(),\n    front: data.sprites.front_default,\n    back: data.sprites.back_default,\n    name: data.name,\n    stats: data.stats.map(stat => ({\n      value: stat.base_stat,\n      name: stat.stat.name\n    }))\n  };\n}\nexport { choice, formatCard, formatPokemon };","map":{"version":3,"names":["v1","uuidv1","v4","uuidv4","choice","values","randIdx","Math","floor","random","length","formatCard","data","image","cards","id","uuid","formatPokemon","front","sprites","front_default","back","back_default","name","stats","map","stat","value","base_stat"],"sources":["/Users/keegannunes/Downloads/react-cards-pokemon/src/helpers.js"],"sourcesContent":["import { v1 as uuidv1 } from 'uuid';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n/* Select a random element from values array. */\nfunction choice(values) {\n  const randIdx = Math.floor(Math.random() * values.length);\n  return values[randIdx];\n}\n\n/* Format response data from the Deck of Cards API,\n * extracting just the image url. */\nfunction formatCard(data) {\n  return {\n    image: data.cards[0].image,\n    id: uuid()\n  };\n}\n\n/* Format response data from the Pokemon API,\n * extracting the front image, back image,\n * and array of relevant stat information. */\nfunction formatPokemon(data) {\n  return {\n    id: uuid(),\n    front: data.sprites.front_default,\n    back: data.sprites.back_default,\n    name: data.name,\n    stats: data.stats.map(stat => ({\n      value: stat.base_stat,\n      name: stat.stat.name\n    }))\n  };\n}\n\nexport { choice, formatCard, formatPokemon };"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;AAGnC;AACA,SAASC,MAAMA,CAACC,MAAM,EAAE;EACtB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,MAAM,CAACK,MAAM,CAAC;EACzD,OAAOL,MAAM,CAACC,OAAO,CAAC;AACxB;;AAEA;AACA;AACA,SAASK,UAAUA,CAACC,IAAI,EAAE;EACxB,OAAO;IACLC,KAAK,EAAED,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACD,KAAK;IAC1BE,EAAE,EAAEC,IAAI,CAAC;EACX,CAAC;AACH;;AAEA;AACA;AACA;AACA,SAASC,aAAaA,CAACL,IAAI,EAAE;EAC3B,OAAO;IACLG,EAAE,EAAEC,IAAI,CAAC,CAAC;IACVE,KAAK,EAAEN,IAAI,CAACO,OAAO,CAACC,aAAa;IACjCC,IAAI,EAAET,IAAI,CAACO,OAAO,CAACG,YAAY;IAC/BC,IAAI,EAAEX,IAAI,CAACW,IAAI;IACfC,KAAK,EAAEZ,IAAI,CAACY,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;MAC7BC,KAAK,EAAED,IAAI,CAACE,SAAS;MACrBL,IAAI,EAAEG,IAAI,CAACA,IAAI,CAACH;IAClB,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,SAASnB,MAAM,EAAEO,UAAU,EAAEM,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}